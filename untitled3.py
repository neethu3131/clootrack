# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Q7MNgx0MCM7AxWWpvnMTN_J7yvQtksN
"""

import pandas as pd

Reviewdata = pd.read_csv('testdata.csv')

!pip install scikit-learn==0.13

from sklearn.model_selection import train_test_split
Indepenent_var = Reviewdata.Review
Dependent_var=Reviewdata.Location

IV_train,IV_test,DV_train,DV_test = train_test_split(Indepenent_var,Dependent_var,random_state=225)
print('IV_train:' , len(IV_train))
print('IV_test:' , len(IV_test))
print('DV_train:' , len(DV_train))
print('DV_test:' , len(DV_test))

from sklearn.feature_extraction.text import TfidfVectorizer
>>> corpus = [
...     'This is the first document.',
...     'This document is the second document.',
...     'And this is the third one.',
...     'Is this the first document?',
... ]

from sklearn.linear_model import LogisticRegression

from sklearn.pipeline import Pipeline

tvec = TfidfVectorizer()
clf2=LogisticRegression(solver="lbfgs")

model = Pipeline([('Vectorizer',tvec),('classifier',clf2)])

v=TfidfVectorizer(decode_error='replace',encoding='utf-8')
x=v.fit_transform(Reviewdata['Review'].values.astype('U'))

v=TfidfVectorizer(decode_error='replace',encoding='utf-8')
x=v.fit_transform(Reviewdata['Location'].values.astype('U'))

model.fit(IV_train, DV_train)

from sklearn.metrics import confusion_matrix
predictions = model.predict(IV_test)
confusion_matrix(predictions,DV_test)

from sklearn.metrics import accuracy_score,prediction_score,recall_score

